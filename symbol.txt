# 此文件内填写需要Hook的符号名称。
# 每行填一个完整的符号名称，不多不少，不要包括其他内容！
# 以#或//开头的行将被视为注释，不影响PDB工具解析。
# 例如：
# ??0ProjectileComponent@@QEAA@AEAVActor@@@Z
# 此处开始填入符号

# 以下内容适合BDS的版本为1.13.0.34，如果以后版本更新导致其中的某些符号变化，请您自行检查更新适配。

# BlockTypeRegistry注册方块表
?mBlockLookupMap@BlockTypeRegistry@@0V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$SharedPtr@VBlockLegacy@@@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$SharedPtr@VBlockLegacy@@@@@std@@@2@@std@@A
# VanillaBlockTypes方块注册过程
#?registerBlocks@VanillaBlockTypes@@YAXXZ




##################################这里开始是有效的函数信息,上方是原作者写的东西###########################################

#检测玩家消息(指令监听)
?fireEventPlayerMessageChat@MinecraftEventing@@UEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
#生成粒子效果 level * ,std::string , Vec3 ,Dimension 村庄可视化的基础，也算个蹩脚的图形接口
?spawnParticleEffect@Level@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVVec3@@PEAVDimension@@@Z


############################文本提示##################################
以服务器的身份发送消息
?displayLocalizableMessage@CommandUtils@@YAX_NAEAVPlayer@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@@Z




############################世界更新###################################
#玩家tick世界
Player::tickWorld
# 服务器玩家tick世界
?tickWorld@ServerPlayer@@UEAAHAEBUTick@@@Z
#维度tick
?tick@Dimension@@UEAAXXZ
#存档更新函数
?tick@Level@@UEAAXXZ
#区块更新
?tick@LevelChunk@@QEAAXAEAVBlockSource@@AEBUTick@@@Z
#随机刻更新
?tickBlocks@LevelChunk@@QEAAXAEAVBlockSource@@@Z
#方块实体更新
?tickBlockEntities@LevelChunk@@QEAAXAEAVBlockSource@@@Z
#刷怪
?tick@Spawner@@QEAAXAEAVBlockSource@@AEBVLevelChunk@@@Z
#pendingtick
?tickPendingTicks@BlockTickingQueue@@QEAA_NAEAVBlockSource@@AEBUTick@@H_N@Z
#维度更新
#?tick@TheEndDimension@@UEAAXXZ
#更新村庄
#?tick@Village@@QEAAXUTick@@AEAVBlockSource@@@Z
#维度更新红石
?tickRedstone@Dimension@@UEAAXXZ



#############################实体信息#######################################
#获取实体调试信息
?getDebugText@Actor@@UEAAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
#获取玩家位置
?getPos@Actor@@UEBAAEBVVec3@@XZ
#攻击实体
?attack@Actor@@UEAA_NAEAV1@@Z
玩家攻击实体
?attack@Player@@UEAA_NAEAVActor@@@Z
#爆炸
?explode@Explosion@@QEAAXXZ
#设置命名牌内容
?setNameTag@Actor@@UEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
#获取生物的debug信息
?buildDebugInfo@Mob@@UEBAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
#获取玩家视角
?getViewVector@Actor@@QEBA?AVVec3@@M@Z


################################方块信息###################################
#染料右击方块
?_useOn@DyePowderItem@@EEBA_NAEAVItemStack@@AEAVActor@@VBlockPos@@EMMM@Z
#红石粉右击方块
?_useOn@RedStoneDustItem@@EEBA_NAEAVItemStack@@AEAVActor@@VBlockPos@@EMMM@Z
#根据blockSource获取方块实体对象
#?getBlockEntity@BlockSource@@QEAAPEAVBlockActor@@AEBVBlockPos@@@Z
#获取方块对象
?getBlock@BlockSource@@QEBAAEBVBlock@@AEBVBlockPos@@@Z
?getBlock@BlockSource@@QEBAAEBVBlock@@HHH@Z
#获取方块调试信息
?getName@Block@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ

#getLegacyBlock
?getLegacyBlock@Block@@QEBAAEBVBlockLegacy@@XZ

#放置方块
?setBlock@BlockSource@@QEAA_NHHHAEBVBlock@@H@Z
#放置方块
?setBlock@BlockSource@@QEAA_NAEBVBlockPos@@AEBVBlock@@HPEBUActorBlockSyncMessage@@@Z
#锹右键方块
?_useOn@ShovelItem@@EEBA_NAEAVItemStack@@AEAVActor@@VBlockPos@@EMMM@Z
#放置海绵方块
?onPlace@SpongeBlock@@UEBAXAEAVBlockSource@@AEBVBlockPos@@@Z
#阻止NC更新
?updateNeighborsAt@BlockSource@@QEAAXAEBVBlockPos@@@Z
#玩家放置方块
?onBlockPlacedByPlayer@VanillaServerGameplayEventListener@@UEAA?AW4EventResult@@AEAVPlayer@@AEBVBlock@@AEBVBlockPos@@_N@Z
#玩家破坏方块
?_destroyBlockInternal@GameMode@@AEAA_NAEBVBlockPos@@E@Z
#获取方块调试信息
?toDebugString@Block@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
#获取方块边框
?getOutline@BlockLegacy@@UEBAAEBVAABB@@AEAVBlockSource@@AEBVBlockPos@@AEAV2@@Z
#获取方块legacy调试信息
?getDebugText@BlockLegacy@@QEBAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBVBlockPos@@@Z
#获取方块实体的调试信息
?getDebugText@BlockActor@@UEAAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBVBlockPos@@@Z
#设置额外方块
?setExtraBlock@BlockSource@@QEAA_NAEBVBlockPos@@AEBVBlock@@H@Z
#获取具有特殊值的方块?
?tryGetStateFromLegacyData@BlockLegacy@@QEBAPEBVBlock@@G@Z
########################################村庄#######################################

#村庄更新
?tick@Village@@QEAAXUTick@@AEAVBlockSource@@@Z
#获取半径
?getApproximateRadius@Village@@QEBAMXZ

#获取村民信息
?buildDebugInfo@VillagerV2@@UEBAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z

#判定POI是否是某个方块
?isVillagePOI@Village@@SA_NAEBVBlockSource@@AEBVBlockPos@@@Z
#村庄管理器tick
?tick@VillageManager@@QEAAXAEBUTick@@@Z
#获取POI
?getPOI@VillageManager@@QEBA?AV?$weak_ptr@VPOIInstance@@@std@@AEBVBlockPos@@@Z
#获取村庄床POI的数量
?getBedPOICount@Village@@QEBA_KXZ
#######################Spawner############################
#生成怪物
?spawnMob@Spawner@@QEAAPEAVMob@@AEAVBlockSource@@AEBUActorDefinitionIdentifier@@PEAVActor@@AEBVVec3@@_N44@Z



####################指令#############################
##指令范围判定
?validRange@Command@@SA_NHHHAEAVCommandOutput@@@Z

##################################Hopper counter##################################
?_tryMoveInItem@Hopper@@IEAA_NAEAVBlockSource@@AEAVContainer@@AEAVItemStack@@HHH@Z
#HopperBlockActor setItem
?setItem@HopperBlockActor@@UEAAXHAEBVItemStack@@@Z


######################################物品#######################################
#获取物品名字
?getName@ItemStackBase@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
#实体对方块使用物品
?useOn@Item@@QEBA_NAEAVItemStack@@AEAVActor@@HHHEMMM@Z

#########################################红石#############################################
#获取红石组件
?getBaseComponent@CircuitSceneGraph@@QEAAPEAVBaseCircuitComponent@@AEBVBlockPos@@@Z
#红石系统更新
?evaluate@CircuitSystem@@QEAAXPEAVBlockSource@@@Z
#消费者更新
?evaluate@ConsumerComponent@@UEAA_NAEAVCircuitSystem@@AEBVBlockPos@@@Z
#红石线更新
?evaluate@TransporterComponent@@UEAA_NAEAVCircuitSystem@@AEBVBlockPos@@@Z


#红石线cacheValue
?cacheValues@TransporterComponent@@UEAAXAEAVCircuitSystem@@AEBVBlockPos@@@Z
#比较器CacheValue
?cacheValues@ComparatorCapacitor@@UEAAXAEAVCircuitSystem@@AEBVBlockPos@@@Z
#中继器CacheValue
?cacheValues@RepeaterCapacitor@@UEAAXAEAVCircuitSystem@@AEBVBlockPos@@@Z
#火把cacheValue
?cacheValues@RedstoneTorchCapacitor@@UEAAXAEAVCircuitSystem@@AEBVBlockPos@@@Z

#设置坐标
?setPos@Actor@@UEAAXAEBVVec3@@@Z
#构造实体
?_constructActor@ActorFactory@@AEAA?AV?$unique_ptr@VActor@@U?$default_delete@VActor@@@std@@@std@@AEBUActorDefinitionIdentifier@@AEBVVec3@@AEBVVec2@@@Z